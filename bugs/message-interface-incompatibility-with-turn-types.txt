# Problem
Multiple test files are failing due to incompatibility between the old Message interface and the new Turn union types. The tests are trying to create Message objects with missing required fields (role, turnNumber) and accessing properties that don't exist in the new Turn structure.

# Affected Systems
- backend/tests/gameLogicValidation.test.ts
- backend/tests/gameStatePersistence.test.ts
- backend/tests/aiService.test.ts
- backend/tests/aiRoutes.test.ts
- backend/tests/errorHandling.test.ts
- backend/src/socket/handlers/gameHandlers.ts
- backend/src/game/logic.ts

# Root Cause
The codebase was transitioning from a Message interface with properties like id, content, senderId, timestamp, role, turnNumber to a new Turn union type system with OutsiderTurn, AITurn, and InsiderTurn. The tests and some implementation code were still using the old Message structure.

# Solution
1. Updated all type definitions to use the new Turn union types
2. Replaced Message interface with OutsiderTurn, AITurn, and InsiderTurn interfaces
3. Updated GameState to use Turn[] instead of Message[]
4. Updated all methods to work with the new Turn structure
5. Fixed property access patterns to use type-specific properties instead of generic ones
6. Updated AI service to work with Turn[] instead of Message[]
7. Updated socket handlers to use new Turn structure for broadcasting

# Debugging Process
1. Ran npm test and identified failing test files
2. Analyzed error messages to understand the root cause
3. Examined the old Message interface structure
4. Implemented new Turn union types as specified in the checklist
5. Updated GameStateManager to work with new Turn types
6. Updated GameLogic to use new Turn structure
7. Updated socket handlers to broadcast Turn objects instead of Message objects
8. Updated AI service to analyze Turn[] instead of Message[]
9. Updated AI routes to validate Turn structure
10. Fixed all property access issues by using type-specific properties 